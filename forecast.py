import os
import requests
import pandas as pd
import matplotlib.pyplot as plt
from datetime import datetime

OPENWEATHER_KEY = os.getenv("OPENWEATHER_KEY")

if not OPENWEATHER_KEY:
    raise RuntimeError("–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è OPENWEATHER_KEY")


def get_city_coords(city):
    url = "http://api.openweathermap.org/geo/1.0/direct"
    params = {"q": city, "limit": 1, "appid": OPENWEATHER_KEY}
    resp = requests.get(url, params=params).json()
    if not resp:
        return None
    return resp[0]["lat"], resp[0]["lon"]


def get_air_forecast(lat, lon):
    url = "http://api.openweathermap.org/data/2.5/air_pollution/forecast"
    params = {"lat": lat, "lon": lon, "appid": OPENWEATHER_KEY}
    return requests.get(url, params=params).json()


def aqi_category(aqi):
    if aqi == 1:
        return "üü¢ –•–æ—Ä–æ—à–æ"
    elif aqi == 2:
        return "üü° –£–º–µ—Ä–µ–Ω–Ω–æ"
    elif aqi == 3:
        return "üü† –í—Ä–µ–¥–Ω–æ –¥–ª—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö"
    elif aqi == 4:
        return "üî¥ –í—Ä–µ–¥–Ω–æ"
    elif aqi == 5:
        return "üü£ –û—á–µ–Ω—å –≤—Ä–µ–¥–Ω–æ"
    return "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"


def get_forecast(city: str):
    coords = get_city_coords(city)
    if not coords:
        return f"–ì–æ—Ä–æ–¥ '{city}' –Ω–µ –Ω–∞–π–¥–µ–Ω.", None

    lat, lon = coords
    data = get_air_forecast(lat, lon)
    if "list" not in data:
        return f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–∞ –¥–ª—è {city}", None

    times, aqis, cats = [], [], []
    for item in data["list"][:24]:  # –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 24 —á–∞—Å–∞
        dt = datetime.fromtimestamp(item["dt"])
        aqi = item["main"]["aqi"]  # 1‚Äì5 –ø–æ OpenWeather
        times.append(dt)
        aqis.append(aqi)
        cats.append(aqi_category(aqi))

    df = pd.DataFrame({"–í—Ä–µ–º—è": times, "AQI": aqis, "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": cats})

    # –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫
    plt.figure(figsize=(10, 4))
    plt.plot(df["–í—Ä–µ–º—è"], df["AQI"], marker="o", color="blue")
    plt.title(f"–ü—Ä–æ–≥–Ω–æ–∑ AQI –Ω–∞ 24 —á–∞—Å–∞ –¥–ª—è {city}")
    plt.xlabel("–í—Ä–µ–º—è")
    plt.ylabel("AQI (1=–ª—É—á—à–µ, 5=—Ö—É–∂–µ)")
    plt.xticks(rotation=45)
    plt.grid(True)
    plt.tight_layout()
    plt.savefig("forecast.png")

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    summary = f"–ü—Ä–æ–≥–Ω–æ–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–∑–¥—É—Ö–∞ –¥–ª—è {city}:\n\n"
    for _, row in df.iterrows():
        summary += f"{row['–í—Ä–µ–º—è'].strftime('%H:%M')} ‚Äî {row['–ö–∞—Ç–µ–≥–æ—Ä–∏—è']}\n"

    return summary, "forecast.png"
