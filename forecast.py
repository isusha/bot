import os
import requests

API_KEY = os.getenv("OPENWEATHER_API_KEY")
if not API_KEY:
    raise ValueError("–ù–µ –∑–∞–¥–∞–Ω OPENWEATHER_API_KEY!")

def get_coordinates(city: str):
    """–ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–æ—Ä–æ–¥–∞ —á–µ—Ä–µ–∑ OpenWeather Geocoding API"""
    url = f"https://api.openweathermap.org/geo/1.0/direct?q={city}&limit=1&appid={API_KEY}"
    try:
        resp = requests.get(url, timeout=10)
        resp.raise_for_status()
        data = resp.json()
        if data:
            return data[0]["lat"], data[0]["lon"]
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: {e}")
    return None, None

def calculate_aqi(pm25: float, pm10: float):
    """–°—á–∏—Ç–∞–µ–º AQI –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ Android"""
    aqi_pm25 = int((pm25 / 12.0) * 50)
    aqi_pm10 = int((pm10 / 50.0) * 50)
    return max(aqi_pm25, aqi_pm10)

def get_air_pollution(lat: float, lon: float):
    """–ü–æ–ª—É—á–∞–µ–º AQI, PM2.5, PM10, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞"""
    url_aqi = f"https://api.openweathermap.org/data/2.5/air_pollution?lat={lat}&lon={lon}&appid={API_KEY}"
    url_weather = f"https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API_KEY}&units=metric"

    try:
        resp_aqi = requests.get(url_aqi, timeout=10)
        resp_aqi.raise_for_status()
        data_aqi = resp_aqi.json()
        components = data_aqi["list"][0]["components"]
        pm25 = components.get("pm2_5", 0)
        pm10 = components.get("pm10", 0)
        aqi = calculate_aqi(pm25, pm10)

        resp_weather = requests.get(url_weather, timeout=10)
        resp_weather.raise_for_status()
        data_weather = resp_weather.json()
        temp = data_weather["main"]["temp"]
        wind_speed = data_weather["wind"].get("speed", 0)

        return aqi, pm25, pm10, temp, wind_speed
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None, None, None, None, None

def analyze_conditions(aqi, temp, wind_speed):
    """–î–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è –≤–æ–∑–¥—É—Ö–∞"""
    advices = []
    if temp >= 30:
        advices.append("üå° –í—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è.")
    elif temp <= 0:
        advices.append("‚ùÑ –ù–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ‚Äî –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ –º–æ–∂–µ—Ç —É–º–µ–Ω—å—à–∞—Ç—å—Å—è.")

    if wind_speed >= 5:
        advices.append("üí® –°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä ‚Äî –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ –≤–æ–∑–¥—É—Ö–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—Å—è.")
    elif wind_speed <= 1:
        advices.append("üí® –°–ª–∞–±—ã–π –≤–µ—Ç–µ—Ä ‚Äî –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ –º–æ–∂–µ—Ç —É–≤–µ–ª–∏—á–∏—Ç—å—Å—è.")

    return " ".join(advices) if advices else "‚úÖ –¢–µ–∫—É—â–∏–µ —É—Å–ª–æ–≤–∏—è —Å—Ç–∞–±–∏–ª—å–Ω—ã –¥–ª—è –≤–æ–∑–¥—É—Ö–∞."

def aqi_message(city: str):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è Telegram"""
    lat, lon = get_coordinates(city)
    if lat is None:
        return f"‚ùå –ì–æ—Ä–æ–¥ '{city}' –Ω–µ –Ω–∞–π–¥–µ–Ω."

    aqi, pm25, pm10, temp, wind_speed = get_air_pollution(lat, lon)
    if aqi is None:
        return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ AQI."

    if aqi <= 50:
        status = "–•–æ—Ä–æ—à–∏–π"
    elif aqi <= 100:
        status = "–£–º–µ—Ä–µ–Ω–Ω—ã–π"
    elif aqi <= 150:
        status = "–í—Ä–µ–¥–Ω—ã–π –¥–ª—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö"
    elif aqi <= 200:
        status = "–í—Ä–µ–¥–Ω—ã–π"
    else:
        status = "–û—á–µ–Ω—å –≤—Ä–µ–¥–Ω—ã–π"

    advice = analyze_conditions(aqi, temp, wind_speed)

    return (
        f"üåç AQI –≤ {city}: {aqi} ({status})\n"
        f"PM2.5: {pm25} ¬µg/m¬≥, PM10: {pm10} ¬µg/m¬≥\n"
        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C, üí® –í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n"
        f"{advice}"
    )
